# ===================================================================
# Pixi Profile-Based Configuration
# ===================================================================
# This file defines different tool profiles for various use cases
# Profiles allow selective installation of tool sets based on needs
#
# Usage:
# - pixi install --environment default  # Install base tools only  
# - pixi install --environment dev      # Install development tools
# - pixi shell --environment dev        # Activate development environment
#
# Documentation: https://pixi.sh/

[project]
name = "dotfiles-tools"
channels = ["conda-forge"]

# ===================================================================
# Default Profile - Essential Tools
# ===================================================================
[feature.default.dependencies]
# Navigation & Search Tools
fzf = "*"                # Fuzzy finder for files, commands, and more
ripgrep = "*"            # Ultra-fast text search (replaces grep)
fd-find = "*"            # User-friendly find alternative
bat = "*"                # Cat with syntax highlighting and git integration
tldr = "*"               # Simplified man pages with examples
zoxide = "*"             # Smart cd command that learns your habits

# Prompt & Shell Enhancements
starship = "*"           # Cross-shell prompt (configured in starship.toml)
atuin = "*"              # Enhanced shell history with search and sync
direnv = "*"             # Per-directory environment variables
mcfly = "*"              # Intelligent history search with fuzzy matching

# System Utilities
eza = "*"                # Modern ls replacement with git integration
duf = "*"                # Disk usage/free utility with better output
btop = "*"               # Beautiful system monitor (replaces top/htop)
ncdu = "*"               # NCurses disk usage analyzer
tmux = "*"               # Terminal multiplexer for session management
dust = "*"               # More intuitive version of du

# WSL2 and Cross-Platform Utilities
# Note: xclip and wl-clipboard are installed via system package manager in setup script

# Essential Tools
chezmoi = "*"            # Dotfile manager
jq = "*"                 # JSON processor and query tool
sd = "*"                 # Intuitive find & replace CLI (sed alternative)
tealdeer = "*"           # Fast tldr client for quick help

# Editors
neovim = "*"             # Modern Vim with better defaults and Lua config

# ===================================================================
# Development Profile - Additional Dev Tools
# ===================================================================
[feature.dev.dependencies]
# Developer & Data Tools
pixi = "*"               # Package manager (self-managed for updates)
git-delta = "*"          # Syntax-highlighted git diffs
gh = "*"                 # GitHub CLI for repository management
just = "*"               # Command runner and task automation
qsv = "*"                # Fast CSV data processing toolkit
xsv = "*"                # CSV command line toolkit
gitui = "*"              # Terminal UI for git operations
tig = "*"                # Text-mode interface for git

# Network & Monitoring Tools
httpie = "*"             # User-friendly HTTP client
curlie = "*"             # curl with httpie-like interface
bandwhich = "*"          # Terminal bandwidth utilization tool
fx = "*"                 # Interactive JSON viewer and processor

# Performance & Benchmarking
hyperfine = "*"          # Command-line benchmarking tool
entr = "*"               # Run commands when files change
htop = "*"               # Interactive process viewer (fallback to btop)

# ===================================================================
# Environment Definitions
# ===================================================================
[environments]
default = ["default"]
dev = ["default", "dev"]

# ===================================================================
# Installation Notes
# ===================================================================
# Tools not yet available in conda-forge are installed via run_once_setup_tools.sh.tmpl
# using cargo, go install, or other package managers. These include:
# - gum: Interactive shell utilities
# - lazydocker: Terminal UI for docker
# - vipe: Edit pipes interactively
# 
# As these tools become available in conda-forge, move them to the appropriate profile

